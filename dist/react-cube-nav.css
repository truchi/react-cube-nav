/* ----- Variables ----- */
:root {
  --transition-duration: .4s;
  --transition-timing  : cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

/**
 * ================================================================
 *                               CUBE
 * ================================================================
 */
.Cube[react-cube-nav] {
  position: relative;
  width   : 100%;
  height  : 100%;
  overflow: hidden;
}

/**
 * ================================================================
 *                               LAYER
 * ================================================================
 */
/* ----- General ----- */
.Layer[react-cube-nav] {
  position: absolute;
  display : grid;
  width   : 100%;
  height  : 100%;

  grid-auto-columns: 100%;
  grid-auto-rows   : 100%;

  --Layer-tx: calc((var(--Layer-col, 1) - 1) * -100%);
  --Layer-ty: calc((var(--Layer-row, 1) - 1) * -100%);
  --Layer-ox: calc((var(--Layer-col, 1) - 1) * 100% + 50% + 3%);
  --Layer-oy: calc((var(--Layer-row, 1) - 1) * 100% + 50% - 3%);

  transform-origin:
    var(--Layer-ox)
    var(--Layer-oy);

  transition:
    opacity   var(--transition-duration) var(--transition-timing)
  , transform var(--transition-duration) var(--transition-timing);
}

/* ----- Depth layering ----- */
.Layer[react-cube-nav].current {
  z-index  : 1;
  opacity  : 1;
  transform:
    translate(var(--Layer-tx), var(--Layer-ty))
    scale(1);
}

.Layer[react-cube-nav].in,
.Layer[react-cube-nav].out {
  z-index       : 0;
  opacity       : 0;
  pointer-events: none;
}

.Layer[react-cube-nav].in {
  transform:
    translate(var(--Layer-tx), var(--Layer-ty))
    scale(.5);
}

.Layer[react-cube-nav].out {
  transform:
    translate(var(--Layer-tx), var(--Layer-ty))
    scale(2);
}


/**
 * ================================================================
 *                               FACE
 * ================================================================
 */
.Face[react-cube-nav] {
  grid-row   : var(--Face-row, 1);
  grid-column: var(--Face-col, 1);
  width      : 100%;
  height     : 100%;

  opacity       : 0;
  pointer-events: none;

  transition: opacity var(--transition-duration) var(--transition-timing);
}

.Face[react-cube-nav].current {
  opacity       : 1;
  pointer-events: initial;
}
